version: "3"

tasks:
  compose-up:
    dir: ".."
    cmds:
      - docker-compose -f ./docker-compose.{{.STAGE}}.yml up -d {{.CLI_ARGS}}

  remove-backend-image:
    dir: ".."
    cmds:
      - docker rmi -f ${BACKEND_IMAGE_NAME}

  remove-realtime-image:
    dir: ".."
    cmds:
      - docker rmi -f ${REALTIME_IMAGE_NAME}

  remove-graph-image:
    dir: ".."
    cmds:
      - docker rmi -f ${GRAPH_IMAGE_NAME}

  rebuild-attach-all:
    dir: ".."
    ignore_error: true
    cmds:
      # - task --parallel remove-backend-image remove-realtime-image remove-graph-image
      - task: build-stack
      - docker-compose -f ./docker-compose.{{.STAGE}}.yml up -d -V
      - docker attach ${REALTIME_CONTAINER_NAME} &
      - docker attach ${GRAPH_CONTAINER_NAME} &
      - docker attach ${BACKEND_CONTAINER_NAME}

  rebuild-attach-backend:
    dir: ".."
    cmds:
      # - task: remove-backend-image
      - task: compose-build-attach-single-template
        vars:
          COMPOSE_SERVICE: backend-svc
          CONTAINER_NAME: "{{.BACKEND_CONTAINER_NAME}}"
  
  rebuild-attach-realtime:
    dir: ".."
    cmds:
      # - task: remove-realtime-image
      - task: compose-build-attach-single-template
        vars:
          COMPOSE_SERVICE: realtime-svc
          CONTAINER_NAME: "{{.REALTIME_CONTAINER_NAME}}"
          NO_DEPS: "--no-deps"
  
  rebuild-attach-graph:
    dir: ".."
    cmds:
      # - task: remove-graph-image
      - task: compose-build-attach-single-template
        vars:
          NO_DEPS: "--no-deps"
          COMPOSE_SERVICE: graph-svc
          CONTAINER_NAME: "{{.GRAPH_CONTAINER_NAME}}"

  build-stack:
    dir: ".."
    cmds:
      - docker-compose -f ./docker-compose.{{.STAGE}}.yml build {{.NOCACHE}} realtime-svc
      - docker-compose -f ./docker-compose.{{.STAGE}}.yml build graph-svc # re-use cache
      - docker-compose -f ./docker-compose.{{.STAGE}}.yml build backend-svc # re-use cache

  compose-build-attach-single-template:
    dir: ".."
    cmds:
      - docker-compose -f ./docker-compose.{{.STAGE}}.yml build {{.NOCACHE}} {{.COMPOSE_SERVICE}}
      - docker-compose -f ./docker-compose.{{.STAGE}}.yml up -d -V {{.NO_DEPS}} {{.COMPOSE_SERVICE}}
      - docker attach {{.CONTAINER_NAME}}

  recreate-realtime:
    ignore_error: true
    dir: ".."
    cmds:
      - task: remove-realtime-image
      - docker-compose -f ./docker-compose.{{.STAGE}}.yml up -d --force-recreate -V --no-deps realtime-svc
      - docker attach ${REALTIME_CONTAINER_NAME}

  recreate-backend:
    ignore_error: true
    dir: ".."
    cmds:
      - task: remove-backend-image
      - docker-compose -f ./docker-compose.{{.STAGE}}.yml up -d --force-recreate -V --no-deps backend-svc
      - docker attach ${BACKEND_CONTAINER_NAME}

  recreate-graph:
    ignore_error: true
    dir: ".."
    cmds:
      - task: remove-graph-image
      - docker-compose -f ./docker-compose.{{.STAGE}}.yml up -d --force-recreate -V --no-deps graph-svc
      - docker attach ${GRAPH_CONTAINER_NAME}

  recreate-template:
    ignore_error: true
    dir: ".."
    cmds:
      - docker-compose -f ./docker-compose.{{.STAGE}}.yml up -d --force-recreate -V --no-deps backend-svc
      - docker attach ${BACKEND_CONTAINER_NAME}

  build-on-host:
    dir: ".."
    ignore_error: true
    cmds:
      - yarn
      - yarn run build

  clean-rebuild-attach-all:
    dir: ".."
    ignore_error: true
    cmds:
      - task: compose-down
      - cmd: 
        task: cleanup-all
      - task: rebuild-attach-all

  compose-down:
    dir: ".."
    ignore_error: true
    cmds:
      - docker-compose -f ./docker-compose.{{.STAGE}}.yml down

  cleanup-all:
    dir: ".."
    ignore_error: true
    cmds:
      - docker image prune -a -f
      - docker volume prune -f
      - docker system prune -f

  lint:
    dir: ".."
    cmds:
      - node_modules/.bin/eslint -c eslint.config.js .

  yarn-host:
    dir: ".."
    cmds:
      - yarn {{.CLI_ARGS}}

  exec:
    dir: ".."
    cmds:
      - node_modules/.bin/{{.CLI_ARGS}}

  test:
    dir: ".."
    ignore_error: true
    cmds:
      - node_modules/.bin/jest {{.CLI_ARGS}}

  test-realtime:
    dir: ".."
    cmds:
      - yarn workspace @app/realtime run client

  esbuild:
    dir: "{{.ESBUILD_DIR}}"
    vars:
      GITHUB_SHA:
        sh: git log --format="%H" -n 1
    cmds:
      - |
        esbuild '--define:process.env.COMMIT="{{.GITHUB_SHA}}"' --log-level=error --platform=node --target=node12.20 --minify-whitespace --minify-syntax --bundle --external:mongodb-client-encryption --outdir=build {{.ENTRIES}}

  build-and-run:
    - task -t Taskfile.build.yml STAGE=build common:build-stack
    - task -t Taskfile.prod.yml STAGE=prod common:compose-up
