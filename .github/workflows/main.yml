# This is a basic workflow to help you get started with Actions

name: Docker node app

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main, day11 ]
  pull_request:
    branches: [ main, day11 ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  Lint-Test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Lint and Test
        env:
          DOCKER_BUILDKIT: 1
          BACKEND_IMAGE_NAME: gtldhawalgandhi/prod-backend-image:v0.0.1
          REALTIME_IMAGE_NAME: gtldhawalgandhi/prod-realtime-image:v0.0.1
          GRAPH_IMAGE_NAME: gtldhawalgandhi/prod-graph-image:v0.0.1
          STAGE: build
        run: |
          docker-compose -f docker-compose.$STAGE.yml build --no-cache lint-test

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Runs a single command using the runners shell
      - name: Build services
        env:
          DOCKER_BUILDKIT: 1
          BACKEND_IMAGE_NAME: gtldhawalgandhi/prod-backend-image:v0.0.1
          REALTIME_IMAGE_NAME: gtldhawalgandhi/prod-realtime-image:v0.0.1
          GRAPH_IMAGE_NAME: gtldhawalgandhi/prod-graph-image:v0.0.1
          STAGE: build
        run: |
          docker-compose -f ./docker-compose.$STAGE.yml build --no-cache realtime-svc
          docker-compose -f ./docker-compose.$STAGE.yml build backend-svc
          docker-compose -f ./docker-compose.$STAGE.yml build graph-svc
          docker push $BACKEND_IMAGE_NAME
          docker push $REALTIME_IMAGE_NAME
          docker push $GRAPH_IMAGE_NAME