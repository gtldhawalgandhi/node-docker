version: '3.4'

services:
  mongo-ui-svc:
    image: gtldhawalgandhi/dbgate:dev
    container_name: mongo_ui
    depends_on: 
      - 'mongo-db-svc'
    ports:
      - 3009:3000
    networks:
      - docker_app_network

  mongo-db-svc:
    image: mongo:4.4.6-bionic
    container_name: mongo_db
    restart: always
    environment: 
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
      MONGO_INITDB_USERNAME: ${MONGO_INITDB_USERNAME}
      MONGO_INITDB_PASSWORD: ${MONGO_INITDB_PASSWORD}
    ports:
      - 27017:27017
    volumes:
      - mongodb_data:/data/db
      - ./packages/backend/scripts/mongo-init.sh:/docker-entrypoint-initdb.d/mongo-init.sh:ro
    networks:
      - docker_app_network

  backend-svc:
    image: "${BACKEND_IMAGE_NAME}:dev"
    container_name: ${BACKEND_CONTAINER_NAME}
    build:
      context: ./
      target: backend
      dockerfile: ./Dockerfile.dev
    environment:
      NODE_ENV: development
      PORT: ${BACKEND_PORT}
      DB: ${MONGODB_URL}
      SALT: ${SALT}
      REALTIME_APP_HOST: realtime-svc
    depends_on: 
      - 'mongo-ui-svc'
      - 'realtime-svc'
    ports:
      - ${BACKEND_PORT}:${BACKEND_PORT}
      - ${BACKEND_DEBUG_PORT}:9229
    volumes:
      - ./:/work:rw
      - /work/packages/lib/build
    networks:
      - docker_app_network
    command: ["yarn", "dev:run"]

  realtime-svc:
    image: "${REALTIME_IMAGE_NAME}:dev"
    container_name: ${REALTIME_CONTAINER_NAME}
    build:
      context: ./
      target: realtime
      dockerfile: ./Dockerfile.dev
    environment:
      NODE_ENV: development
      PORT: ${REALTIME_PORT}
    ports:
      - ${REALTIME_PORT}:${REALTIME_PORT}
      - ${REALTIME_DEBUG_PORT}:9229
    volumes:
      - ./:/work:rw
      - /work/packages/lib/build
    networks:
      - docker_app_network
    command: ["yarn", "dev:run:realtime"]

  graph-svc:
    image: "${GRAPH_IMAGE_NAME}:dev"
    container_name: ${GRAPH_CONTAINER_NAME}
    build:
      context: ./
      target: graph
      dockerfile: ./Dockerfile.dev
    environment:
      NODE_ENV: development
      PORT: ${GRAPH_PORT}
    ports:
      - ${GRAPH_PORT}:${GRAPH_PORT}
      - ${GRAPH_DEBUG_PORT}:9229
    volumes:
      - ./:/work:rw
      - /work/packages/lib/build
    networks:
      - docker_app_network
    command: ["yarn", "dev:run:graph"]

volumes:
  mongodb_data:

networks:
  docker_app_network: