version: "3"

dotenv: [".env"]

tasks:
  compose-up:
    deps: ["install-deps"]
    dir: "."
    cmds:
      - docker-compose -f ./docker-compose.dev.yml up -d {{.CLI_ARGS}}
      - docker attach ${NODE_APP_CONTAINER_NAME}

  remove-node-image:
    dir: "."
    cmds:
      - docker rmi -f nodeappimage-dev:v1

  rebuild-node-app:
    deps: ["install-deps", "build-lib-package"]
    ignore_error: true
    dir: "."
    cmds:
      - task: remove-node-image
      - docker-compose -f ./docker-compose.dev.yml up -d --force-recreate -V --no-deps node-app
      - docker attach ${NODE_APP_CONTAINER_NAME}

  build-lib-package:
    dir: "."
    ignore_error: true
    cmds:
      - yarn run predev:run

  rebuild-all:
    dir: "."
    ignore_error: true
    deps: ["install-deps", "build-lib-package"]
    cmds:
      - task: remove-node-image
      - docker-compose -f ./docker-compose.dev.yml up -d --force-recreate -V --build {{.CLI_ARGS}}
      - docker attach ${NODE_APP_CONTAINER_NAME}

  clean-rebuild:
    dir: "."
    ignore_error: true
    cmds:
      - task: compose-down
      - task: remove-node-image
      - docker volume rm ${NODE_MONGO_VOLUME_NAME}
      - docker network rm node_${NODE_APP_NETWORK_NAME}
      - task: rebuild-all

  compose-down:
    dir: "."
    cmds:
      - docker-compose -f ./docker-compose.dev.yml down

  remove-all:
    dir: "."
    cmds:
      - docker stop ${MONGO_UI_CONTAINER_NAME} ${MONGO_DB_CONTAINER_NAME} ${NODE_APP_CONTAINER_NAME}
      - docker rm ${MONGO_UI_CONTAINER_NAME} ${MONGO_DB_CONTAINER_NAME} ${NODE_APP_CONTAINER_NAME}

  lint:
    dir: "."
    cmds:
      - node_modules/.bin/eslint -c eslint.config.js .

  install-deps:
    dir: "."
    cmds:
      - yarn {{.CLI_ARGS}}

  exec:
    dir: "."
    cmds:
      - node_modules/.bin/{{.CLI_ARGS}}

  test:
    dir: "."
    cmds:
      - node_modules/.bin/jest {{.CLI_ARGS}}

  test-realtime:
    dir: "."
    cmds:
      - yarn workspace @app/realtime run client
